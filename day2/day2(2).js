// 浏览器想要执行js代码：
/* 
1.从电脑内存中分配出一块内存，用来执行代码(栈内存=》Stack)  相当于有了一个饭店 但是人员还没有
2.浏览器分配一个主线程用来自上而下执行js代码 类似服务员需要去挨个点菜

基本类型数据操作
let a = 12 分三步
1.创建变量a 放到当前栈内存变量存储区域中
2.创建一个12 放到当前栈内存值区域中(简单的基本类型值是这样存储的，复杂的引用类型值不是这样做的)
3.=为赋值，其实赋值是让变量和值相互关联的过程

！！ 注意 let a = 12 执行完就出栈了 这样下一行代码才能执行 联想出餐 你给 前一个的出完 才能给后一个出
*/

/*
 复杂值(引用类型值)的存储，也分三步
 1.在内存中分配出一块新内存，用来存储引用类型值(堆内存=>heap) =>内存有一个16进制地址
 2.把对象中的键值对（属性名：属性值）依次存储到堆内存中
 3.把堆内存地址和变量关联起来

 */

/*  基本类型：按值操作（直接操作的是值），所以也叫值类型
    引用类型：操作的是堆内存的地址（按引用地址操作的） */

let n = [10, 20];
let m = n;
let x = m;
m[0] = 100;
x = [30, 40];
x[0] = 200;
m = x;
m[1] = 300;
console.log(n, m, x); // [100,20] [200,300] [200,300]

// 阿里面试题
let a = {
  n: 1,
};
let b = a;
a.x = a = {
  n: 2,
};
console.log(a.x);
console.log(b);
// !!!!!!!!!! a=b=3   意思是 a = 3 b =3 而不是 b=3 a =b 注意顺序 是先a 后 b
a = { 1: 2 };
b = a;
a.x = b; // 这样会导致无线递归 不行

//  *额外问题
// 拓展 除了console.log 还有那些 我记得console.warn 什么的
//<script></script> 标签放到页面头部和尾部的区别，以及解决办法。
